// <auto-generated />
using CestaFeira.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CestaFeira.Infra.Migrations
{
    [DbContext(typeof(CestaFeiraContext))]
    [Migration("20250528232214_CestaFeiraDbV001")]
    partial class CestaFeiraDbV001
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CestaFeira.Domain.Entidades.CampanhaCesta", b =>
                {
                    b.Property<int>("IdCampanha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCampanha"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(70)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("QuantidadeCestas")
                        .HasColumnType("int");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("IdCampanha");

                    b.ToTable("Campanhas");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.CestaBasica", b =>
                {
                    b.Property<int>("IdCestaBasica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCestaBasica"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<int>("IdCampanha")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("IdCestaBasica");

                    b.HasIndex("IdCampanha");

                    b.ToTable("CestasBasicas");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.Doacao", b =>
                {
                    b.Property<int>("IdDoacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdDoacao"));

                    b.Property<int>("IdCampanha")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdDoacao");

                    b.HasIndex("IdCampanha");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Doacoes");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.Item", b =>
                {
                    b.Property<int>("IdItem")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdItem"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.Property<string>("Unidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("IdItem");

                    b.ToTable("Itens");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.ItemCestaBasica", b =>
                {
                    b.Property<int>("IdItemCestaBasica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdItemCestaBasica"));

                    b.Property<int>("IdCestaBasica")
                        .HasColumnType("int");

                    b.Property<int>("IdItem")
                        .HasColumnType("int");

                    b.Property<int>("ItemIdItem")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.HasKey("IdItemCestaBasica");

                    b.HasIndex("IdCestaBasica");

                    b.HasIndex("ItemIdItem");

                    b.ToTable("ItensCestaBasica");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.ItemDoacao", b =>
                {
                    b.Property<int>("IdItemDoacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdItemDoacao"));

                    b.Property<int>("IdDoacaoCestaBasica")
                        .HasColumnType("int");

                    b.Property<int>("IdItem")
                        .HasColumnType("int");

                    b.Property<string>("Observacoes")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("IdItemDoacao");

                    b.HasIndex("IdDoacaoCestaBasica");

                    b.HasIndex("IdItem");

                    b.ToTable("ItensDoacao");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("CpfCnpj")
                        .IsRequired()
                        .HasMaxLength(14)
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("NivelAcessoUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Situacao")
                        .HasColumnType("int");

                    b.HasKey("IdUsuario");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.CestaBasica", b =>
                {
                    b.HasOne("CestaFeira.Domain.Entidades.CampanhaCesta", "Campanha")
                        .WithMany("CestasBasicas")
                        .HasForeignKey("IdCampanha")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campanha");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.Doacao", b =>
                {
                    b.HasOne("CestaFeira.Domain.Entidades.CampanhaCesta", "Campanha")
                        .WithMany("Doacoes")
                        .HasForeignKey("IdCampanha")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CestaFeira.Domain.Entidades.Usuario", "Usuario")
                        .WithMany("Doacoes")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campanha");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.ItemCestaBasica", b =>
                {
                    b.HasOne("CestaFeira.Domain.Entidades.CestaBasica", "Cesta")
                        .WithMany("ItemsCesta")
                        .HasForeignKey("IdCestaBasica")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("CestaFeira.Domain.Entidades.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemIdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cesta");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.ItemDoacao", b =>
                {
                    b.HasOne("CestaFeira.Domain.Entidades.Doacao", "Doacao")
                        .WithMany("ItensDoacao")
                        .HasForeignKey("IdDoacaoCestaBasica")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CestaFeira.Domain.Entidades.ItemCestaBasica", "ItemCesta")
                        .WithMany("ItensDoacao")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Doacao");

                    b.Navigation("ItemCesta");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.CampanhaCesta", b =>
                {
                    b.Navigation("CestasBasicas");

                    b.Navigation("Doacoes");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.CestaBasica", b =>
                {
                    b.Navigation("ItemsCesta");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.Doacao", b =>
                {
                    b.Navigation("ItensDoacao");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.ItemCestaBasica", b =>
                {
                    b.Navigation("ItensDoacao");
                });

            modelBuilder.Entity("CestaFeira.Domain.Entidades.Usuario", b =>
                {
                    b.Navigation("Doacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
